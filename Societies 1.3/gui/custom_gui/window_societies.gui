societies_window = {
	name = "window_societies"
}

types SocietiesWindow  {
	type societies_window = window {
		parentanchor = top|right
		layer = windows_layer
		movable = no
		using = Window_Size_MainTab
		visible = "[And(GetVariableSystem.HasValue('sidebar_window','window_societies'),IsInGame)]"
		#visible = "[And(GetVariableSystem.Exists('artifact_window_open'),IsInGame)]"
		state = {
			name = initialize
			trigger_on_create = yes
			on_start = "[GetVariableSystem.Set( 'window_societies', 'yes' )]"
		}
		state = {
			name = _hide
			using = Animation_FadeOut_Quick
			using = Sound_WindowHide_Standard
			using = Window_Position_MainTab_Hide
			trigger_when = "[IsRightWindowOpen]"
			#on_start = "[GetVariableSystem.Clear('society_window_open')]"
		}
		state = {
			name = _show
			using = Animation_FadeIn_Quick
			using = Sound_WindowShow_Standard
			using = Window_Position_MainTab
			# Clears any GameViews if they are open:
			# This one closes only sidebar tabs:
			on_start = "[GetScriptedGui('close_other_views').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
			#on_start = "[ToggleGameView( Select_CString( IsGameViewOpen('my_realm'), 'my_realm', '' ) )]"
			#on_start = "[ToggleGameView( Select_CString( IsGameViewOpen('military'), 'military', '' ) )]"
			#on_start = "[ToggleGameView( Select_CString( IsGameViewOpen('council_window'), 'council_window', '' ) )]"
			#on_start = "[ToggleGameView( Select_CString( IsGameViewOpen('court_window'), 'court_window', '' ) )]"
			#on_start = "[ToggleGameView( Select_CString( IsGameViewOpen('intrigue_window'), 'intrigue_window', '' ) )]"
			#on_start = "[ToggleGameView( Select_CString( IsGameViewOpen('factions_window'), 'factions_window', '' ) )]"
			#on_start = "[ToggleGameView( Select_CString( IsGameViewOpen('decisions'), 'decisions', '' ) )]"
			on_start = "[GetVariableSystem.Set( 'society_view_tabs', 'maintab' )]"
			on_start = "[ExecuteConsoleCommand(Concatenate(Concatenate('effect get_society_leader={SOCIETY=',GetPlayer.MakeScope.Var('society_selection').GetFlagName),'}'))]"
			# Any mod-specific windows can be cleared here:
			#on_start = "[GetVariableSystem.Clear('radiant_window_open')]"
		}

		background = {
			texture = "gfx/interface/component_tiles/solid_black_label.dds"
			margin_left = -40
			fittype = centercrop
		}

		margin_widget = {
			size = { 100% 100% }
			margin_right = 20
			margin_top = 30
			widget = {
				size = { 100% 100% }
				using = Window_Background
				using = Window_Decoration_Warfare

				vbox = {
					using = Window_Margins
					background = {
						texture = "gfx/interface/illustrations/event_scenes/councilchamber.dds"
						margin = { -5 0 }
						margin_right = -30
						fittype = end
						alpha = 0.4
						framesize = { 1200 848 }

						modify_texture = {
							texture = "gfx/interface/component_masks/mask_fade_vertical_up.dds"
							blend_mode = alphamultiply
						}
					}
					header_pattern = {
						layoutpolicy_horizontal = expanding
						blockoverride "header_text"
						{
							text = "SOCIETIES_VIEW_TITLE"
						}

						blockoverride "button_close"
						{
							onclick = "[GetVariableSystem.Set('sidebar_window','none')]"
						}
					}
					hbox = {
						using = Window_Margins
						layoutpolicy_horizontal = expanding
						margin_bottom = 5
	
						button_tab = {
							layoutpolicy_horizontal = expanding
							onclick = "[GetVariableSystem.Set( 'society_view_tabs', 'maintab' )]"
							down = "[GetVariableSystem.HasValue( 'society_view_tabs', 'maintab' )]"
								
							text_single = {
								text = "Main View"
								parentanchor = center
									
								maximumsize = { 300 -1 }
								default_format = "#low"
							}
						}
	
						button_tab = {
							layoutpolicy_horizontal = expanding
							onclick = "[GetVariableSystem.Set( 'society_view_tabs', 'select_society' )]"
							down = "[GetVariableSystem.HasValue( 'society_view_tabs', 'select_society' )]"
							text_single = {
								text = "Select Societies"
								parentanchor = center
									
								maximumsize = { 300 -1 }
								default_format = "#low"
							}
						}
						button_tab = {
							layoutpolicy_horizontal = expanding
							onclick = "[GetVariableSystem.Set( 'society_view_tabs', 'society_members' )]"
							onclick = "[ExecuteConsoleCommand(Concatenate(Concatenate('effect generate_society_members_list={SOCIETY=',GetPlayer.MakeScope.Var('society_selection').GetFlagName),'}'))]"
							down = "[GetVariableSystem.HasValue( 'society_view_tabs', 'society_members' )]"	
							text_single = {
								text = "Society Members"
								parentanchor = center
								maximumsize = { 200 -1 }
								default_format = "#low"
							}
						}
					}
					vbox = {
						visible = "[GetVariableSystem.HasValue( 'society_view_tabs', 'maintab' )]"
						layoutpolicy_vertical = expanding
						text_single = {
							text = selected_society_title
							align = center
							fontsize = 20
						}
						spacer = {
							size = { 0 10 }
						}
						divider_light = {
							layoutpolicy_horizontal = expanding
						}
						text_single = {
							text = selected_society_desc
							align = center
							fontsize = 16
						}
						society_spacer_vertical_large = {}
						society_spacer_vertical_large = {}
						hbox = {
							hbox = {
								layoutpolicy_horizontal = expanding
								state = {    #id move this to when the window is shown.
									name = get_leader
									trigger_on_create = yes
									duration = .01
									on_start = "[GetScriptedGui('society_leader').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
								}

								portrait_head = {
									visible = "[GetScriptedGui('societies_not_selected_society').IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
								}

								dynamicgridbox = {
									datacontext = "[GetPlayer]"
									layoutpolicy_vertical = expanding
									layoutpolicy_horizontal = expanding
									ignoreinvisible = yes
									maxhorizontalslots = 1
									maxverticalslots = 100
									block "datamodel" {
										datamodel = "[GetPlayer.MakeScope.GetList('society_leader')]"
									}
									item = {
										widget = {
											block "size" {
												size = { 105 105 }
											}
											vbox = {
												datacontext = "[Scope.GetCharacter]"
												layoutpolicy_horizontal = expanding 
												portrait_head = {}
												text_single = {
													text = "[Scope.GetCharacter.MakeScope.Var('society_rank').GetFlagName]"
													fontsize = 16
												}
											}
										}
									}
								}
								expand = {}
							}
							society_spacer_horizontal = {}
							hbox = {
								icon = {
									texture = "gfx/societies/society_blank.dds"
									visible = "[GetScriptedGui('societies_not_selected_society').IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
									size = { 261 261 }
								}
								layoutpolicy_horizontal = expanding
								datacontext = "[GetScriptedGui('societies_dummy_gui')]"
								text_single = {
									text = "[Localize(Concatenate(Concatenate('@icon_',GetPlayer.MakeScope.Var('society_selection').GetFlagName), '!'))]"
									size = { 261 261 }
								}
							}
							society_spacer_horizontal = {}
							vbox = {
								hbox = {
									layoutpolicy_horizontal = expanding        
									datacontext = "[GetPlayer]"
									portrait_head = {
										button = {
											parentanchor = bottom|right
											name = "rank_up_in_society"
											onclick = "[ExecuteConsoleCommand(Concatenate(Concatenate('effect rank_up_in_society={SOCIETY=',GetPlayer.MakeScope.Var('society_selection').GetFlagName),'}'))]"
											clicksound = "event:/SFX/UI/Notifications/TopBar/sfx_ui_notifications_topbar_diplomacy"
											texture = "gfx/societies/button_rank_up.dds"
											tooltip = rank_up_society
											enabled = "[GetScriptedGui('rank_up_validity').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
										}
									}
									
								}
								text_single = {
									text = "[GetPlayer.MakeScope.Var('society_rank').GetFlagName]"
									fontsize = 16
									visible = "[GetScriptedGui('societies_in_a_society').IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
								}
							}
						}

						vbox = {
							datacontext = "[GetScriptedGui('societies_dummy_gui')]"
							icon = {
								texture = "gfx/societies/society_blank_ranks.dds"
								visible = "[GetScriptedGui('societies_not_selected_society').IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
								size = { 116 25 }
							}
							text_single = {
								text = "[Localize(Concatenate(Concatenate('@icon_ranks_',GetPlayer.MakeScope.Var('society_selection').GetFlagName), '!'))]"
								size = { 116 25 }
								tooltip = society_ranks_test
							}
						}
						society_spacer_vertical_large = {}
						society_spacer_vertical_large = {}
						society_spacer_vertical_large = {}
						hbox = {
							background = {
								margin_left = 40
								margin_right = 40
								margin_top = 20
								margin_bottom = 20

								texture = "gfx/interface/component_tiles/solid_black_label.dds"
								spriteType = Corneredtiled
								spriteborder = { 20 20 }

								modify_texture = {
									name = "mask"
									texture = "gfx/interface/component_masks/mask_rough_edges.dds"
									spriteType = Corneredstretched
									spriteborder = { 0 0 }
									blend_mode = alphamultiply
								}
							}
							text_single = {
								text = society_currency
								align = center
								fontsize = 16
							}
							text_single = {
								text = "[GetPlayer.MakeScope.Var('society_currency').GetValue|0]"
								align = center
								fontsize = 16
							}
							society_spacer_horizontal = {}
							button = {
								name = "leave_society"
								onclick = "[ExecuteConsoleCommand(Concatenate(Concatenate('effect leave_society={SOCIETY=',GetPlayer.MakeScope.Var('society_selection').GetFlagName),'}'))]"
								clicksound = "event:/SFX/UI/Notifications/TopBar/sfx_ui_notifications_topbar_diplomacy"
								texture = "gfx/societies/button_abort.dds"
								tooltip = leavy_society
							}
						}
						society_spacer_vertical_large = {}
						society_spacer_vertical_large = {}
						society_spacer_vertical_large = {}
						hbox = {
							background = {
								margin_left = 40
								margin_right = 40
								margin_top = 20
								margin_bottom = 20

								texture = "gfx/interface/component_tiles/solid_black_label.dds"
								spriteType = Corneredtiled
								spriteborder = { 20 20 }

								modify_texture = {
									name = "mask"
									texture = "gfx/interface/component_masks/mask_rough_edges.dds"
									spriteType = Corneredstretched
									spriteborder = { 0 0 }
									blend_mode = alphamultiply
								}
							}
							text_single = {
								text = "society_mission_test"
								align = center
								fontsize = 16
								minimumsize = { 360 -1 }
							}
							button = {
								name = "clear_mission"
								onclick = "[ExecuteConsoleCommand(Concatenate(Concatenate('effect clear_mission={MISSION=',GetPlayer.MakeScope.Var('society_mission').GetFlagName),'}'))]"
								clicksound = "event:/SFX/UI/Notifications/TopBar/sfx_ui_notifications_topbar_diplomacy"
								texture = "gfx/societies/button_abort.dds"
								tooltip = clear_mission
								size = { 35 35 }
								enabled = "[GetScriptedGui('has_mission').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
							}
						}
						expand = {}
					}
					vbox = {
						visible = "[GetVariableSystem.HasValue( 'society_view_tabs', 'select_society' )]"
						layoutpolicy_vertical = expanding
						text_single = {
							text = "Select Society"
							align = center
							fontsize = 20
						}
						spacer = {
							size = { 0 10 }
						}
						divider_light = {
							layoutpolicy_horizontal = expanding
						}
						dynamicgridbox = {
							datacontext = "[GetPlayer]"
							layoutpolicy_vertical = expanding
							ignoreinvisible = yes
							maxhorizontalslots = 1
							maxverticalslots = 100
							block "datamodel" {
								datamodel = "[GetDummyMale.MakeScope.GetList('all_societies_list')]"
							}
							item = {
								widget = {
									visible = "[GetScriptedGui(Concatenate(Scope.GetFlagName,'_requirement')).IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
									block "size" {
										size = { 500 141 }
									}
									hbox = {
										text_single = {
											text = "[Localize(Concatenate(Concatenate('@icon_small_',Scope.GetFlagName), '!'))]"
											size = { 141 141 }
										}
										spacer = {
											size = { 10 0 }
										}
										vbox = {
											text_single = {
												text = "[Localize(Concatenate(Scope.GetFlagName,'_name'))]"
												fontsize = 16
												align = center
											}
											text_single = {
												text = "[Localize(Concatenate(Scope.GetFlagName,'_desc'))]"
												fontsize = 10
												align = center
												minimumsize = { 320 -1 }
											}
										}
										vbox = {
											button = {
												name = "select_society"
												onclick = "[ExecuteConsoleCommand(Concatenate(Concatenate('effect select_society={SOCIETY=',Scope.GetFlagName),'}'))]"
												clicksound = "event:/SFX/UI/Notifications/TopBar/sfx_ui_notifications_topbar_diplomacy"
												texture = "gfx/societies/button_open.dds"
												tooltip = select_society
											}
											button = {
												name = "join_society"
												onclick = "[ExecuteConsoleCommand(Concatenate(Concatenate('effect join_',Scope.GetFlagName),'}'))]"
												clicksound = "event:/SFX/UI/Notifications/TopBar/sfx_ui_notifications_topbar_diplomacy"
												texture = "gfx/societies/button_join.dds"
												tooltip = join_society
												enabled = "[GetScriptedGui('societies_not_in_society').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
											}
										}
										expand = {}
									}
								}
							}
						}
						expand = {}
					}
					vbox = {
						visible = "[GetVariableSystem.HasValue( 'society_view_tabs', 'society_members' )]"
						layoutpolicy_vertical = expanding
						text_single = {
							text = "Selected Society Members"
							align = center
							fontsize = 20
						}
						spacer = {
							size = { 0 10 }
						}
						divider_light = {
							layoutpolicy_horizontal = expanding
						}
						scrollbox = {
							name = "artifacts_scrollarea"
							layoutpolicy_horizontal = expanding
							layoutpolicy_vertical = expanding
							#size = {100% 100%}
							size = { 500 800 }
							blockoverride "scrollbox_content"
							{
								dynamicgridbox = {
									datacontext = "[GetPlayer]"
									layoutpolicy_vertical = expanding
									layoutpolicy_horizontal = expanding
									ignoreinvisible = yes
									maxhorizontalslots = 1
									maxverticalslots = 200
									block "datamodel" {
										datamodel = "[GetPlayer.MakeScope.GetList('selected_society_members')]"
									}
									item = {
										widget = {
											block "size" {
												size = { 500 141 }
											}
											vbox = {
												visible = "[Not(GetScriptedGui(Concatenate('hidden_',Scope.GetCharacter.MakeScope.Var('society_selection').GetFlagName)).IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).End))]"
												hbox = {
													layoutpolicy_horizontal = expanding 
													icon = {
														texture = "gfx/portraits/unknown_portraits/unknown_shoulders.dds"
														size = { 110 110 }
													}
													text_single = {
														name = "name_unknown"
														layoutpolicy_horizontal = expanding
														autoresize = no
														text = "????????"
														using = Font_Size_Medium
														align = nobaseline
														fontsize_min = 14
														margin_right = 10
													}
												}
											}
											vbox = {
												visible = "[GetScriptedGui(Concatenate('hidden_',Scope.GetCharacter.MakeScope.Var('society_selection').GetFlagName)).IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
												hbox = {
													datacontext = "[Scope.GetCharacter]"
													layoutpolicy_horizontal = expanding 
													portrait_head = {}
													text_single = {
														name = "name"
														layoutpolicy_horizontal = expanding
														autoresize = no
														text = "[Character.GetUINameNoTooltip]"
														using = Font_Size_Medium
														align = nobaseline
														fontsize_min = 14
														margin_right = 10
													}
												}
											}
											container = {
												hbox = {
													position = { 108 20 }
													text_single = {
														text = "Society Currency: "
														fontsize = 16
													}
													text_single = {
														datacontext = "[Scope.GetCharacter]"
														text = "[Character.MakeScope.Var('society_currency').GetValue|0]"
														fontsize = 16
													}
													expand = {}
												}
												text_single = {
													datacontext = "[Scope.GetCharacter]"
													position = { 110 100 }
													text = "[Character.MakeScope.Var('society_rank').GetFlagName]"
													fontsize = 16
												}
											}
										}
									}
								}
							}
						}
						expand = {}
					}
					expand = {}
				}
			}
		}
	}
}


types Societies
{
	type society_spacer_horizontal = widget {
		size = { 8 0 }
	}
	type society_spacer_vertical = widget {
		size = { 0 3 }
	}
	type society_spacer_vertical_large = widget {
		size = { 0 15 }
	}
}